
#!/usr/bin/python
import sys
#Dest
def C():
	d={
	'0'  : 0b1110101010000000,
	'1'  : 0b1110111111000000,
	'-1' : 0b1110111010000000,
	'D'  : 0b1110001100000000,
	'A'  : 0b1110110000000000,
	'!D' : 0b1110001101000000,
	'!A' : 0b1110110001000000,
	'-D' : 0b1110001111000000,
	'-A' : 0b1110110011000000,
	'D+1': 0b1110011111000000,
	'A+1': 0b1110110111000000,
	'1+D': 0b1110011111000000,
	'1+A': 0b1110110111000000,
	'D-1': 0b1110001110000000,
	'A-1': 0b1110110010000000,
	'D+A': 0b1110000010000000,
	'A+D': 0b1110000010000000,
	'D-A': 0b1110010011000000,
	'A-D': 0b1110000111000000,
	'D&A': 0b1110000000000000,
	'A&D': 0b1110000000000000,
	'D|A': 0b1110010101000000,
	'A|D': 0b1110010101000000,

	'M'  : 0b1111110000000000,
	'!M' : 0b1111110001000000,
	'-M' : 0b1111110011000000,
	'M+1': 0b1111110111000000,
	'1+M': 0b1111110111000000,
	'M-1': 0b1111110010000000,
	'D+M': 0b1111000010000000,
	'M+D': 0b1111000010000000,
 	'D-M': 0b1111010011000000,
	'M-D': 0b1111000111000000,
	'D&M': 0b1111000000000000,
	'M&D': 0b1111000000000000,
	'M|D': 0b1111010101000000,
	'D|M': 0b1111010101000000,
	#for the TWIST
	'$0'  : 0b1010101010000000,
	'$1'  : 0b1010111111000000,
	'$-1' : 0b1010111010000000,
	'$D'  : 0b1010001100000000,
	'$A'  : 0b1010110000000000,
	'$!D' : 0b1010001101000000,
	'$!A' : 0b1010110001000000,
	'$-D' : 0b1010001111000000,
	'$-A' : 0b1010110011000000,
	'$D+1': 0b1010011111000000,
	'$A+1': 0b1010110111000000,
	'$1+D': 0b1010011111000000,
	'$1+A': 0b1010110111000000,
	'$D-1': 0b1010001110000000,
	'$A-1': 0b1010110010000000,
	'$D+A': 0b1010000010000000,
	'$A+D': 0b1010000010000000,
	'$D-A': 0b1010010011000000,
	'$A-D': 0b1010000111000000,
	'$D&A': 0b1010000000000000,
	'$A&D': 0b1010000000000000,
	'$D|A': 0b1010010101000000,

	'$M'  : 0b1011110000000000,
	'$!M' : 0b1011110001000000,
	'$-M' : 0b1011110011000000,
	'$M+1': 0b1011110111000000,
	'$1+M': 0b1011110111000000,
	'$M-1': 0b1011110010000000,
	'$D+M': 0b1011000010000000,
	'$M+D': 0b1011000010000000,
 	'$D-M': 0b1011010011000000,
	'$M-D': 0b1011000111000000,
	'$D&M': 0b1011000000000000,
	'$M&D': 0b1011000000000000,
	'$M|D': 0b1011010101000000,
	'$D|M': 0b1011010101000000
	}
	return d
#Comp
def D():
	m={
	'0': 0b1110000000000000,
	'M'   : 0b1110000000001000,
	'D'   : 0b1110000000010000,
	'MD'  : 0b1110000000011000,
	'A'   : 0b1110000000100000,
	'AM'  : 0b1110000000101000,
	'AD'  : 0b1110000000110000,
	'AMD' : 0b1110000000111000
	}
	return m;
#Jump
def J():
	j={
	'0'	: 0b1110000000000000,
	'JGT' : 0b1110000000000001,
	'JEQ' : 0b1110000000000010,
	'JGE' : 0b1110000000000011,
	'JLT' : 0b1110000000000100,
	'JNE' : 0b1110000000000101,
	'JLE' : 0b1110000000000110,
	'JMP' : 0b1110000000000111
	}
	return j;
#Find Address of a var
def address(line):
	line.rstrip()
	try:
		i= int(line)
		wf.write(bin(i)[2:].zfill(16)+"\n")
	except ValueError:
		if  line.strip() in db:
			i= db[line.rstrip()]
			wf.write(bin(i)[2:].zfill(16)+"\n")
		else:
			i = db['last']
			db[line.rstrip()] = i
			db['last'] = db['last']+1
			wf.write(bin(i)[2:].zfill(16)+"\n")
	return
#compute comp and dest from line
def check(line):
	line.rstrip()
	temp = line.split('@')
	if len(temp)==2:
		temp[1].rstrip().strip()
		address(temp[1])
	temp = line.split('=')
	if len(temp)==2:
		temp0 = temp[0].rstrip()
		temp1 = temp[1].rstrip()
		d = C()
		m = D()
		dest = m[temp0.strip()]
		comp = d[temp1.strip()]
		union = dest|comp
		if(temp1[0]=='$'):
			union = union-16384
		wf.write(bin(union)[2:].zfill(16)+"\n")
	elif len(temp)==1:
		temp2 = line.split(';')
		if len(temp2)==2:
			temp0  = temp2[0].rstrip()
			temp1  = temp2[1].rstrip()
			d=C()
			j=J()
			comp = d[temp0.strip()]
			jump = j[temp1.strip()]
			union = jump|comp
			if(temp1[0]=='$'):
				union = union-16384
			wf.write(bin(union)[2:].zfill(16)+"\n")

	return

#the constants
db={
	'last':0b0000000000010000,
	'SP'  :0b0000000000000000,
	'LCL'  :0b0000000000000001,
	'ARG'  :0b0000000000000010,
	'THIS'  :0b0000000000000011,
	'THAT'  :0b0000000000000100,
	'R0'  :0b0000000000000000,
	'R1'  :0b0000000000000001,
	'R2'  :0b0000000000000010,
	'R3'  :0b0000000000000011,
	'R4'  :0b0000000000000100,
	'R5'  :0b0000000000000101,
	'R6'  :0b0000000000000110,
	'R7'  :0b0000000000000111,
	'R8'  :0b0000000000001000,
	'R9'  :0b0000000000001001,
	'R10'  :0b0000000000001010,
	'R11'  :0b0000000000001011,
	'R12'  :0b0000000000001100,
	'R13'  :0b0000000000001101,
	'R14'  :0b0000000000001110,
	'R15'  :0b0000000000001111,
	'SCREEN':0b0100000000000000,
	'KBD'  :0b0110000000000000,
	}
#main
try:
	st = sys.argv[1]
except:
	print("no file given")
	exit()
temp = st.split('asm')
wf = open(temp[0]+"hack", 'w')
i=0
with open(st,'r') as f:
	for line in f:
		if (line.strip()):
			if(line[0]=='('):
				line = line[1:]
				newLine = line.replace(")","")
				newLine.rstrip()
				db[newLine.rstrip()] = i
			elif(line[0]!= '/'): i=i+1
#f.close()


with open(st,'r') as f:
	for line in f:
		if line[0]!='/':
			tline = line.split('/')
			tline[0].rstrip().strip()
			check(tline[0])
wf.close()
