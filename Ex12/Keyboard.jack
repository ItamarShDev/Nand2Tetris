// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard
{
	static Array kbd;
	/** Initializes the keyboard. */
	function void init()
	{
		let kbd = 24576; //set the array to point to the kbd memory address
		return;
	}

	/**
	 * Returns the ASCII code (as char) of the currently pressed key,
	 * or 0 if no key is currently pressed.
	 * Recognizes all ASCII characters, and the following extension
	 * of action keys:
	 * New line = 128 = String.newline()
	 * Backspace = 129 = String.backspace()
	 * Left Arrow = 130
	 * Up Arrow = 131
	 * Right Arrow = 132
	 * Down Arrow = 133
	 * Home = 134
	 * End = 135
	 * Page Up = 136
	 * Page Down = 137
	 * Insert = 138
	 * Delete = 139
	 * ESC = 140
	 * F1 - F12 = 141 - 152
	 */
	function char keyPressed()
	{
		return kbd[0];
	}

	/**
	 * Reads the next character from the keyboard.
	 * waits until a key is pressed and then released, then echoes
	 * the key to the screen, and returns the value of the pressed key.
	 */
	function char readChar()
	{
		var char kp;

		while( Keyboard.keyPressed() = 0 ) {}//wait while no pressed

		let kp = Keyboard.keyPressed();//check again

		while( ~(Keyboard.keyPressed() = 0) ) {}//if pressed wait
		if(kp = 128)
		{
		do Output.println();
		}
		else
		{
		if(~(kp=129))
		{
		do Output.printChar(kp);//print it
		}
		}
		return kp;
	}

	/**
	 * prints the message on the screen and then reads the next line
	 * (until a newline character) from the keyboard and returns its value.
	 */
	function String readLine(String message)
	{
		var String line;
		var char ch;
		let line = String.new(63);//width of screen for now

		do Output.printString(message);//print the message

		let ch = Keyboard.readChar();

		while(~(ch= String.newLine()))
		{
			if(~(ch=String.backSpace()))
			{
				do line.appendChar(ch);
			}
			else
			{
				do line.eraseLastChar();
			}

			let ch = Keyboard.readChar();
		}

		return line;
	}

	/**
	 * prints the message on the screen and then reads the next line
	 * (until a newline character) from the keyboard and returns its
	 * integer value (until the first non numeric character).
	 */
	function int readInt(String message)
	{
		var String line;
		var char ch;
		let line = String.new(63);//width of screen for now

		do Output.printString(message);//print the message

		let ch = Keyboard.readChar();

		while(~(ch= String.newLine()))
		{
			if(~(ch=String.backSpace()))
			{
				do line.appendChar(ch);
			}
			else
			{
				do line.eraseLastChar();
			}

			let ch = Keyboard.readChar();
		}

		return line.intValue();
	}
}
